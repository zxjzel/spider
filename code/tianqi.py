import numpy as np
from scipy.stats import pearsonr
import pandas as pd
from sklearn import datasets, linear_model
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics
import matplotlib.pyplot  as plt
#a = [7,4,7,6,5,6,6,0,-1,0,3,-1,-3 ,-4 ,-1 ,1 ,2 ,0 ,-3 ,-6 ,0 ,-5,-2,0,4,5,1 ,4 ,0 ,-4 ,2 ,-2 ,4 ,6 ,5 ,1 ,0 ,-1,-2,-4,-5,-1,4,5,6,9,6,0,4,7,2 ,2 ,0 ,2 ,5 ,7 ,7 ,9 ,9 ,3 ,5 ,10 ,8 ,2 ,3 ,4 ,5 ,8 ,12 ,12 ,6 ,7 ,8 ,10 ,12 ,12 ,14 ,14 ,11 ,8 ,11 ,9 ,8 ,10 ,11 ,12 ,12 ,13 ,12 ,12 ,14 ,16 ,20 ,17 ,10 ,14 ,13 ,13 ,16 ,16 ,15 ,16 ,18 ,19 ,20 ,18 ,16 ,18 ,15 ,17 ,17 ,19 ,20 ,16 ,17 ,18 ,20 ,23 ,25 ,25 ,23 ,21 ,16 ,14 ,19 ,20 ,22 ,25 ,18 ,20 ,23 ,22 ,20 ,18 ,20 ,24 ,24 ,27 ,28 ,26 ,22 ,21 ,21 ,25 ,22 ,23 ,24 ,28 ,23 ,22 ,22 ,27 ,22 ,24 ,26 ,25 ,19 ,23 ,28 ,29 ,25 ,26 ,25 ,26 ,30 ,32 ,30 ,29 ,28 ,26 ,25 ,26 ,26 ,24 ,23 ,25 ,28 ,27 ,27 ,27 ,28 ,28 ,26 ,28 ,30 ,30 ,27 ,26 ,30 ,30 ,28 ,31 ,31 ,30 ,31 ,28 ,28 ,29 ,29 ,29 ,29 ,29 ,29 ,29 ,30 ,31 ,29]
#a = [29,29,28,28,29,29,28,29,28,29,30,31,30,29,30,30,28,27,27,28,27,28,28,27,28,29,28,28,29,29,27,23,23,25,26,27,26,26,26,25,27,28,28,28,26,26,26,26,26,25,26,26,27,26,26,26,25,26,26,26,24,21,20,23,24,23,18,18,19,20,20,22,21,19,13,14,15,18,17,17,16,17,17,19,19,18,12,11,15,18,18,18,18,10,15,16,17,17,8,12,15,15,16,11,15,13,10,12,13,6,6,9,10,0,5,7,10,6,5,5,9,7,8,11,4,0,5,8,3,0,5,7,2,4,8,2,-6,-5,-3,1,2,-3,2,3,1,4,8,8,6,2,4,-3,4,6,3,0,3]
#a = [30,29,29,28,26,28,29,30,31,30,27,29,30,31,32,31,29,32,31,32,31,28,27,29,31,31,31,29,25,27,28,28,27,25,23,20,26,26,27,26,28,26,27,28,27,26,24,24,26,27,27,25,23,23,24,24,24,24,25,25,24,23,16,20,23,24,23,24,22,17,19,18,16,16,20,19,18,21,22,22,19,18,20,23,17,19,13,15,16,17,14,13,10,10,13,10,9,13,15,16,15,10,7,4,7,11,12,13,14,11,6,13,12,14,9,5,0,-3,0,4,7,8,8,6,6,8,7,10,12,10,2,7,4,7,1,5,7,8,-2,-4,-1,6,9,9,6,5,5,-4,-3,2,5,-3,-4,2,0,5,5]
# a = [7,6,4,0,1,0,-1,-1,2,-1,-4,-3,-2,1,3,3,-6,-11,-9,-7,-6,-9,-15,-9,-1,-1,1,3,-3,-6,-5,-2,2,3,0,0,1,2,4,5,8,9,6,-1,-5,-1,3,5,5,4,1,2,3,-2,1,2,3,4,3,5,10,12,8,7,9,8,0,0,2,4,6,5,8,10,12,11,14,11,12,13,12,8,9,10,12,15,16,14,15,19,14,12,15,16,18,16,16,19,17,14,13,14,17,17,19,13,15,13,14,14,16,18,18,18,19,19,19,18,20,22,23,17,13,21,17,20,22,22,20,24,22,18,21,17,17,22,26,25,23,23,26,27,20,22,23,26,26,24,27,26,23,26,28,25,24,26,25,24,27,27,25,25,27,27,22,24,27,29,26,28,26,23,24,24,28,29,30,28,26,24,26,26,29,28,26,26,28,26,26,28,29,30,29,29,33,28,26,28,29,27,24,26,26,28,29,29,27,30]
# b= []
# for i in range(len(a)):
#     b.append(i+1)
# print(b)
# print(pearsonr(a,b))
data = pd.read_csv('E:\Learn\cf\demo5.csv')
X = data[['data']]
y = data[['tp']]
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=1)
linreg = LinearRegression()
linreg.fit(X_train, y_train)
print (linreg.intercept_)
print (linreg.coef_)
y_pred = linreg.predict(X_test)

# 用scikit-learn计算MSE
print ("MSE:",metrics.mean_squared_error(y_test, y_pred))
# 用scikit-learn计算RMSE
print( "RMSE:",np.sqrt(metrics.mean_squared_error(y_test, y_pred)))
# fig, ax = plt.subplots()
# ax.scatter(X,y)
# ax.plot([y.min(), y.max()], [y.min(), y.max()], 'k--', lw=4)
# ax.set_xlabel('Measured')
# ax.set_ylabel('Predicted')
# plt.show()